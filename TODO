is there a way to make it so when the user clicks on a given link within the .grid div, instead of having to create 12
new html pages, just add another div above the .grid div with the correct html (it still needs to be 12 new unique divs
each with their own complex divs) but is there a way to make that work?

Yes, you can achieve this functionality without creating 12 new HTML pages by using JavaScript and dynamically
generating the content when the user clicks on the links within the .grid div. Instead of separate HTML files, you can
create templates for the individual items and use JavaScript to populate the content dynamically. Here's a basic outline
of how you can do it:

Create a template for the grid items: You can define a template for the individual items with complex divs and content.
This template will be cloned and modified for each item.

Modify the HTML: Add an empty container div above the .grid div to hold the dynamically generated content. For example,
you can add a <div id="item-content"></div> above the .grid div.

Update JavaScript: Add an event listener to each link inside the .grid div. When a link is clicked, it should trigger a
function that will retrieve the correct template, modify its content, and then append it to the #item-content container.

Here's a simplified version of the JavaScript code that you can add at the end of your

<body> tag or in an external JS file (e.g., js/dynamicContent.js):

    html
    Copy code
    <script defer src="js/toggleTheme.js"></script>
    <script defer src="js/tooltip.js"></script>
    <script defer src="js/popup.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get the item content container
            const itemContentContainer = document.getElementById('item-content');

            // Get all the links inside the .grid div
            const gridItemLinks = document.querySelectorAll('.grid-item');

            // Define the template for an individual item (replace this with your complex divs)
            const itemTemplate = `
      <div class="item-details">
        <!-- Your complex divs and content here -->
      </div>
    `;

            // Event listener for link clicks
            gridItemLinks.forEach(function (link) {
                link.addEventListener('click', function (event) {
                    event.preventDefault(); // Prevent default link behavior

                    // Clone the item template
                    const itemDiv = document.createElement('div');
                    itemDiv.innerHTML = itemTemplate;

                    // Modify the content based on the specific item (you can use data attributes on the links to differentiate)
                    // For example, if each link has a unique item ID:
                    // const itemId = link.getAttribute('data-item-id');
                    // Modify the itemDiv content based on the itemId

                    // Append the modified itemDiv to the container
                    itemContentContainer.appendChild(itemDiv);
                });
            });
        });
    </script>
    With this setup, when a user clicks on a link within the .grid div, the corresponding content will be generated
    based on
    the template, and it will be appended to the #item-content div above the .grid div. Each item will have its unique
    content, and you don't need to create separate HTML pages for each item. You can further customize the itemTemplate
    and
    modify its content based on the item being clicked using data attributes or any other identifiers you might use.